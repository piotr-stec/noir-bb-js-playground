diff --git a/node_modules/@aztec/bb.js/dest/browser/barretenberg/backend.d.ts b/node_modules/@aztec/bb.js/dest/browser/barretenberg/backend.d.ts
index 2376b55..637bb14 100644
--- a/node_modules/@aztec/bb.js/dest/browser/barretenberg/backend.d.ts
+++ b/node_modules/@aztec/bb.js/dest/browser/barretenberg/backend.d.ts
@@ -60,7 +60,8 @@ export declare class UltraHonkBackend {
     instantiate(): Promise<void>;
     generateProof(compressedWitness: Uint8Array, options?: UltraHonkBackendOptions): Promise<ProofData>;
     verifyProof(proofData: ProofData, options?: UltraHonkBackendOptions): Promise<boolean>;
-    getVerificationKey(): Promise<Uint8Array>;
+    getVerificationKey(options?: UltraHonkBackendOptions): Promise<Uint8Array>;
+
     /** @description Returns a solidity verifier */
     getSolidityVerifier(vk?: Uint8Array): Promise<string>;
     generateRecursiveProofArtifacts(_proof: Uint8Array, _numOfPublicInputs: number): Promise<{
diff --git a/node_modules/@aztec/bb.js/dest/browser/index.js b/node_modules/@aztec/bb.js/dest/browser/index.js
index 0f16ba4..702d407 100644
--- a/node_modules/@aztec/bb.js/dest/browser/index.js
+++ b/node_modules/@aztec/bb.js/dest/browser/index.js
@@ -5929,10 +5929,14 @@ class UltraHonkBackend {
         const vkBuf = await writeVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
         return await verifyUltraHonk(proof, new _types_raw_buffer_js__WEBPACK_IMPORTED_MODULE_3__/* .RawBuffer */ .l(vkBuf));
     }
-    async getVerificationKey() {
+    async getVerificationKey(options) {
         await this.instantiate();
-        return await this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
+        const writeVkUltraHonk = options?.keccak
+            ? this.api.acirWriteVkUltraKeccakHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive)
+            : this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);        
+        return await writeVkUltraHonk;
     }
+
     /** @description Returns a solidity verifier */
     async getSolidityVerifier(vk) {
         await this.instantiate();
diff --git a/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.d.ts b/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.d.ts
index 2376b55..8ff8415 100644
--- a/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.d.ts
+++ b/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.d.ts
@@ -60,7 +60,7 @@ export declare class UltraHonkBackend {
     instantiate(): Promise<void>;
     generateProof(compressedWitness: Uint8Array, options?: UltraHonkBackendOptions): Promise<ProofData>;
     verifyProof(proofData: ProofData, options?: UltraHonkBackendOptions): Promise<boolean>;
-    getVerificationKey(): Promise<Uint8Array>;
+    getVerificationKey(options?: UltraHonkBackendOptions): Promise<Uint8Array>;
     /** @description Returns a solidity verifier */
     getSolidityVerifier(vk?: Uint8Array): Promise<string>;
     generateRecursiveProofArtifacts(_proof: Uint8Array, _numOfPublicInputs: number): Promise<{
diff --git a/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.js b/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.js
index 85af3d4..5859a2b 100644
--- a/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.js
+++ b/node_modules/@aztec/bb.js/dest/node-cjs/barretenberg/backend.js
@@ -150,9 +150,12 @@ class UltraHonkBackend {
         const vkBuf = await writeVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
         return await verifyUltraHonk(proof, new raw_buffer_js_1.RawBuffer(vkBuf));
     }
-    async getVerificationKey() {
+    async getVerificationKey(options) {
         await this.instantiate();
-        return await this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
+        const writeVkUltraHonk = options?.keccak
+            ? this.api.acirWriteVkUltraKeccakHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive)
+            : this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);        
+        return await writeVkUltraHonk;
     }
     /** @description Returns a solidity verifier */
     async getSolidityVerifier(vk) {
diff --git a/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.d.ts b/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.d.ts
index 2376b55..8ff8415 100644
--- a/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.d.ts
+++ b/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.d.ts
@@ -60,7 +60,7 @@ export declare class UltraHonkBackend {
     instantiate(): Promise<void>;
     generateProof(compressedWitness: Uint8Array, options?: UltraHonkBackendOptions): Promise<ProofData>;
     verifyProof(proofData: ProofData, options?: UltraHonkBackendOptions): Promise<boolean>;
-    getVerificationKey(): Promise<Uint8Array>;
+    getVerificationKey(options?: UltraHonkBackendOptions): Promise<Uint8Array>;
     /** @description Returns a solidity verifier */
     getSolidityVerifier(vk?: Uint8Array): Promise<string>;
     generateRecursiveProofArtifacts(_proof: Uint8Array, _numOfPublicInputs: number): Promise<{
diff --git a/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.js b/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.js
index d5e73a8..081054c 100644
--- a/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.js
+++ b/node_modules/@aztec/bb.js/dest/node/barretenberg/backend.js
@@ -146,9 +146,12 @@ export class UltraHonkBackend {
         const vkBuf = await writeVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
         return await verifyUltraHonk(proof, new RawBuffer(vkBuf));
     }
-    async getVerificationKey() {
+    async getVerificationKey(options) {
         await this.instantiate();
-        return await this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
+        const writeVkUltraHonk = options?.keccak
+            ? this.api.acirWriteVkUltraKeccakHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive)
+            : this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);        
+        return await writeVkUltraHonk;
     }
     /** @description Returns a solidity verifier */
     async getSolidityVerifier(vk) {
diff --git a/node_modules/@aztec/bb.js/src/barretenberg/backend.ts b/node_modules/@aztec/bb.js/src/barretenberg/backend.ts
index df541aa..4f8b0e1 100644
--- a/node_modules/@aztec/bb.js/src/barretenberg/backend.ts
+++ b/node_modules/@aztec/bb.js/src/barretenberg/backend.ts
@@ -245,11 +245,13 @@ export class UltraHonkBackend {
     return await verifyUltraHonk(proof, new RawBuffer(vkBuf));
   }
 
-  async getVerificationKey(): Promise<Uint8Array> {
+  async getVerificationKey(options?: UltraHonkBackendOptions): Promise<Uint8Array> {
     await this.instantiate();
-    return await this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
+    const writeVkUltraHonk = options?.keccak
+      ? this.api.acirWriteVkUltraKeccakHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive)
+      : this.api.acirWriteVkUltraHonk(this.acirUncompressedBytecode, this.circuitOptions.recursive);
+    return await writeVkUltraHonk;
   }
-
   /** @description Returns a solidity verifier */
   async getSolidityVerifier(vk?: Uint8Array): Promise<string> {
     await this.instantiate();
@@ -306,7 +308,7 @@ export class AztecClientBackend {
 
   protected api!: Barretenberg;
 
-  constructor(protected acirMsgpack: Uint8Array[], protected options: BackendOptions = { threads: 1 }) {}
+  constructor(protected acirMsgpack: Uint8Array[], protected options: BackendOptions = { threads: 1 }) { }
 
   /** @ignore */
   async instantiate(): Promise<void> {
